name: Oracle VM Deployment

on:
  push:
    branches:
      - oracle-deploy

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          sparse-checkout: |
            projects/FoodFlow
          sparse-checkout-cone-mode: false

      - name: Move FoodFlow to deployment location
        run: |
          cd projects
          mv FoodFlow/* ..
          cd ..
          rm -rf projects

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo -e "${{ secrets.SSH_PRIVATE_KEY }}" | sed 's/\r$//' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H 140.238.222.190 >> ~/.ssh/known_hosts

      - name: Deploy to Oracle VM
        run: |
          # Sichern der vorhandenen .env wenn sie existiert
          ssh -i ~/.ssh/id_rsa ubuntu@140.238.222.190 'cd /var/www/laravel/FoodFlow && [ -f .env ] && cp .env /tmp/backup.env || true'
          
          # Verzeichnisstruktur vorbereiten
          ssh -i ~/.ssh/id_rsa ubuntu@140.238.222.190 'sudo rm -rf /var/www/laravel/FoodFlow && sudo mkdir -p /var/www/laravel/FoodFlow && sudo chown -R ubuntu:ubuntu /var/www/laravel/FoodFlow'
          
          # Dateien synchronisieren in den FoodFlow Ordner
          rsync -av --delete ./ ubuntu@140.238.222.190:/var/www/laravel/FoodFlow/
          
          # Deployment ausf√ºhren
          ssh -i ~/.ssh/id_rsa ubuntu@140.238.222.190 << 'EOF'
            set -e  # Stop execution if any command fails
            trap 'cd /var/www/laravel/FoodFlow && php artisan up' EXIT  # Ensure app goes back online

            cd /var/www/laravel/FoodFlow

            # Wiederherstellen der .env aus dem Backup
            [ -f /tmp/backup.env ] && cp /tmp/backup.env .env

            # Install Composer dependencies
            composer install --no-dev --no-interaction --optimize-autoloader

            # Take application down for maintenance
            php artisan down --render="errors::503"
            
            # Run database migrations and seeds
            php artisan migrate --force
            php artisan db:seed --class=PatchNotesSeeder
            
            # Clear and rebuild cache
            php artisan optimize:clear
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache

            # Set final permissions for web server
            sudo chown -R www-data:www-data .
            sudo chmod -R 775 .
            sudo chmod -R 775 storage bootstrap/cache

            # Restart services
            sudo systemctl restart php8.3-fpm
            sudo systemctl restart nginx

            # Bring application back online
            php artisan up

            # Clean up
            rm -f /tmp/backup.env
          EOF
